{"version":3,"sources":["components/header_row/HeaderRow.module.css","components/row/Row.module.css","components/header_row/HeaderRow.jsx","components/row/Row.jsx","containers/table/Table.jsx","components/column_switch/ColumnSwitch.jsx","containers/app/App.jsx","redux/DevTools.js","api/students.js","redux/store.js","index.jsx","components/column_switch/ColumnSwitch.module.css","containers/app/App.module.css","containers/table/Table.module.css"],"names":["module","exports","HeaderRow","props","dispatch","useDispatch","isNameColumnVisible","useSelector","state","isGithubColumnVisible","isEmailColumnVisible","isLocationColumnVisible","isRoleColumnVisible","isActiveColumnVisible","activeArrowId","useState","modalIsOpen","setIsOpen","activeModalId","setActiveModalId","changeField","field","value","localStorage","setItem","type","payload","openModal","closeModal","activeArrowStyles","color","className","styles","wrapper","header","arrow","id","style","onClick","setCurrentStudentsList","sortDataUpward","currentStudentsList","sortDataDownward","isOpen","onRequestClose","modal","overlayClassName","overlay","content","top","left","request","name","onChange","e","setRequest","target","github","email","location","modalButton","onSearchButtonClick","onResetButtonClick","search","right","roleFilteredBy","handleSelectChange","checked","isChecked","handleCheckboxChange","Modal","setAppElement","isSortedBy","activeItemStyles","background","Number","activeRowId","activeRowsArray","includes","Object","assign","onRowClick","item","role","isActive","Table","students","notVisibleColumns","parseInt","getItem","JSON","parse","setIsChecked","isFilteredByRole","setIsFilteredByRole","setRoleFilteredBy","isFilteredByString","setIsFilteredByString","stringFieldFilteredBy","setStringFieldFilteredBy","setActiveRowId","severalActiveRowsMode","setSeveralActiveRowsMode","setActiveRowsArray","array","category","sort","a","b","filterByRequest","str","filter","toLowerCase","filterByRole","arr","parentNode","Set","onlyVisible","keys","stringify","newArr","i","forEach","length","useEffect","onKeyDown","key","v","onKeyUp","tabIndex","height","width","itemSize","itemCount","index","buttonsContainer","data","exportFromJSON","fileName","exportType","ColumnSwitch","column","addItem","htmlFor","App","devToolsText","DevTools","createDevTools","toggleVisibilityKey","changePositionKey","defaultPosition","defaultIsVisible","theme","faker","seed","Array","map","_","idx","findName","internet","userName","address","city","helpers","shuffle","random","boolean","makeFake","initialState","enhancer","compose","instrument","store","createStore","action","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.617571ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"HeaderRow_wrapper__oSf8Q\",\"header\":\"HeaderRow_header__7qAnR\",\"arrow\":\"HeaderRow_arrow__23WBz\",\"search\":\"HeaderRow_search__2L4E3\",\"modal\":\"HeaderRow_modal__2GxS8\",\"overlay\":\"HeaderRow_overlay__31nSh\",\"modalButton\":\"HeaderRow_modalButton__7BQ5Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Row_wrapper__3xmys\",\"item\":\"Row_item__gAECL\"};","import React, { useState } from 'react';\r\nimport styles from './HeaderRow.module.css';\r\nimport Modal from 'react-modal';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nModal.setAppElement('#root');\r\n\r\nexport default function HeaderRow(props) {\r\n  const dispatch = useDispatch();\r\n  const isNameColumnVisible = useSelector(state => state.isNameColumnVisible);\r\n  const isGithubColumnVisible = useSelector(state => state.isGithubColumnVisible);\r\n  const isEmailColumnVisible = useSelector(state => state.isEmailColumnVisible);\r\n  const isLocationColumnVisible = useSelector(state => state.isLocationColumnVisible);\r\n  const isRoleColumnVisible = useSelector(state => state.isRoleColumnVisible);\r\n  const isActiveColumnVisible = useSelector(state => state.isActiveColumnVisible);\r\n  const activeArrowId = useSelector(state => state.activeArrowId);\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n  const [activeModalId, setActiveModalId] = useState('');\r\n\r\n  function changeField(field, value) {\r\n    localStorage.setItem(field, value);\r\n    return dispatch({\r\n      type: 'CHANGE_FIELD',\r\n      payload: {\r\n        [field]: value\r\n      }\r\n    });\r\n  }\r\n\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  const activeArrowStyles = {\r\n    color: '#A65F30\t'\r\n  };\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.header}>\r\n        #\r\n        <span\r\n          className={styles.arrow}\r\n          id=\"1arrow\"\r\n          style={activeArrowId === '1arrow' ? activeArrowStyles : null}\r\n          onClick={() => {\r\n            props.setCurrentStudentsList(props.sortDataUpward(props.currentStudentsList, 'id'));\r\n            changeField('isSortedBy', 'id');\r\n            changeField('activeArrowId', '1arrow');\r\n          }}\r\n        >\r\n          ▲\r\n        </span>\r\n        <span\r\n          className={styles.arrow}\r\n          id=\"2arrow\"\r\n          style={activeArrowId === '2arrow' ? activeArrowStyles : null}\r\n          onClick={() => {\r\n            props.setCurrentStudentsList(props.sortDataDownward(props.currentStudentsList, 'id'));\r\n            changeField('isSortedBy', 'id');\r\n            changeField('activeArrowId', '2arrow');\r\n          }}\r\n        >\r\n          ▼\r\n        </span>\r\n      </div>\r\n      {isNameColumnVisible ? (\r\n        <div className={styles.header}>\r\n          Name\r\n          <span\r\n            className={styles.arrow}\r\n            style={activeArrowId === '3arrow' ? activeArrowStyles : null}\r\n            id=\"3arrow\"\r\n            onClick={() => {\r\n              props.setCurrentStudentsList(props.sortDataUpward(props.currentStudentsList, 'name'));\r\n              changeField('isSortedBy', 'name');\r\n              changeField('activeArrowId', '3arrow');\r\n            }}\r\n          >\r\n            ▲\r\n          </span>\r\n          <span\r\n            className={styles.arrow}\r\n            id=\"4arrow\"\r\n            style={activeArrowId === '4arrow' ? activeArrowStyles : null}\r\n            onClick={() => {\r\n              props.setCurrentStudentsList(\r\n                props.sortDataDownward(props.currentStudentsList, 'name')\r\n              );\r\n              changeField('isSortedBy', 'name');\r\n              changeField('activeArrowId', '4arrow');\r\n            }}\r\n          >\r\n            ▼\r\n          </span>\r\n          <Modal\r\n            isOpen={modalIsOpen && activeModalId === 'modal1' ? true : false}\r\n            id=\"modal1\"\r\n            onRequestClose={closeModal}\r\n            className={styles.modal}\r\n            overlayClassName={styles.overlay}\r\n            style={{\r\n              content: {\r\n                top: '23px',\r\n                left: '60px'\r\n              }\r\n            }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              value={props.request.name}\r\n              onChange={e => {\r\n                props.setRequest({\r\n                  name: e.target.value,\r\n                  github: props.request.github,\r\n                  email: props.request.email,\r\n                  location: props.request.location\r\n                });\r\n                localStorage.setItem('nameRequest', e.target.value);\r\n              }}\r\n            />\r\n            <br />\r\n            <button\r\n              className={styles.modalButton}\r\n              onClick={() => {\r\n                props.onSearchButtonClick('name');\r\n                closeModal();\r\n              }}\r\n            >\r\n              search\r\n            </button>\r\n            <button\r\n              className={styles.modalButton}\r\n              onClick={() => {\r\n                props.onResetButtonClick('name');\r\n                closeModal();\r\n              }}\r\n            >\r\n              reset\r\n            </button>\r\n          </Modal>\r\n          <br />\r\n          <button\r\n            className={styles.search}\r\n            onClick={() => {\r\n              setActiveModalId('modal1');\r\n              openModal();\r\n            }}\r\n          >\r\n            <i className=\"fas fa-search\"></i>\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n      {isGithubColumnVisible ? (\r\n        <div className={styles.header}>\r\n          github\r\n          <span\r\n            className={styles.arrow}\r\n            id=\"5arrow\"\r\n            style={activeArrowId === '5arrow' ? activeArrowStyles : null}\r\n            onClick={() => {\r\n              props.setCurrentStudentsList(\r\n                props.sortDataUpward(props.currentStudentsList, 'github')\r\n              );\r\n              changeField('isSortedBy', 'github');\r\n              changeField('activeArrowId', '5arrow');\r\n            }}\r\n          >\r\n            ▲\r\n          </span>\r\n          <span\r\n            className={styles.arrow}\r\n            id=\"6arrow\"\r\n            style={activeArrowId === '6arrow' ? activeArrowStyles : null}\r\n            onClick={() => {\r\n              props.setCurrentStudentsList(\r\n                props.sortDataDownward(props.currentStudentsList, 'github')\r\n              );\r\n              changeField('isSortedBy', 'github');\r\n              changeField('activeArrowId', '6arrow');\r\n            }}\r\n          >\r\n            ▼\r\n          </span>\r\n          <Modal\r\n            isOpen={modalIsOpen && activeModalId === 'modal2' ? true : false}\r\n            onRequestClose={closeModal}\r\n            className={styles.modal}\r\n            id=\"modal2\"\r\n            overlayClassName={styles.overlay}\r\n            style={{\r\n              content: {\r\n                top: '23px',\r\n                left: '290px'\r\n              }\r\n            }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              value={props.request.github}\r\n              onChange={e => {\r\n                props.setRequest({\r\n                  name: props.request.name,\r\n                  github: e.target.value,\r\n                  email: props.request.email,\r\n                  location: props.request.location\r\n                });\r\n                localStorage.setItem('githubRequest', e.target.value);\r\n              }}\r\n            />\r\n            <br />\r\n            <button\r\n              className={styles.modalButton}\r\n              onClick={() => {\r\n                props.onSearchButtonClick('github');\r\n                closeModal();\r\n              }}\r\n            >\r\n              search\r\n            </button>\r\n            <button\r\n              className={styles.modalButton}\r\n              onClick={() => {\r\n                props.onResetButtonClick('github');\r\n                closeModal();\r\n              }}\r\n            >\r\n              reset\r\n            </button>\r\n          </Modal>\r\n          <br />\r\n          <button\r\n            className={styles.search}\r\n            onClick={() => {\r\n              setActiveModalId('modal2');\r\n              openModal();\r\n            }}\r\n          >\r\n            <i className=\"fas fa-search\"></i>\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n      {isEmailColumnVisible ? (\r\n        <div className={styles.header}>\r\n          email\r\n          <span\r\n            className={styles.arrow}\r\n            style={activeArrowId === '7arrow' ? activeArrowStyles : null}\r\n            id=\"7arrow\"\r\n            onClick={() => {\r\n              props.setCurrentStudentsList(\r\n                props.sortDataUpward(props.currentStudentsList, 'email')\r\n              );\r\n              changeField('isSortedBy', 'email');\r\n              changeField('activeArrowId', '7arrow');\r\n            }}\r\n          >\r\n            ▲\r\n          </span>\r\n          <span\r\n            className={styles.arrow}\r\n            id=\"8arrow\"\r\n            style={activeArrowId === '8arrow' ? activeArrowStyles : null}\r\n            onClick={() => {\r\n              props.setCurrentStudentsList(\r\n                props.sortDataDownward(props.currentStudentsList, 'email')\r\n              );\r\n              changeField('isSortedBy', 'email');\r\n              changeField('activeArrowId', '8arrow');\r\n            }}\r\n          >\r\n            ▼\r\n          </span>\r\n          <Modal\r\n            isOpen={modalIsOpen && activeModalId === 'modal3' ? true : false}\r\n            onRequestClose={closeModal}\r\n            className={styles.modal}\r\n            id=\"modal3\"\r\n            overlayClassName={styles.overlay}\r\n            style={{\r\n              content: {\r\n                top: '23px',\r\n                left: '660px'\r\n              }\r\n            }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              value={props.request.email}\r\n              onChange={e => {\r\n                props.setRequest({\r\n                  name: props.request.name,\r\n                  github: props.request.github,\r\n                  email: e.target.value,\r\n                  location: props.request.location\r\n                });\r\n                localStorage.setItem('emailRequest', e.target.value);\r\n              }}\r\n            />\r\n            <br />\r\n            <button\r\n              className={styles.modalButton}\r\n              onClick={() => {\r\n                props.onSearchButtonClick('email');\r\n                closeModal();\r\n              }}\r\n            >\r\n              search\r\n            </button>\r\n            <button\r\n              className={styles.modalButton}\r\n              onClick={() => {\r\n                props.onResetButtonClick('email');\r\n                closeModal();\r\n              }}\r\n            >\r\n              reset\r\n            </button>\r\n          </Modal>\r\n          <br />\r\n          <button\r\n            className={styles.search}\r\n            onClick={() => {\r\n              setActiveModalId('modal3');\r\n              openModal();\r\n            }}\r\n          >\r\n            <i className=\"fas fa-search\"></i>\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n      {isLocationColumnVisible ? (\r\n        <div className={styles.header}>\r\n          Location\r\n          <span\r\n            className={styles.arrow}\r\n            id=\"9arrow\"\r\n            style={activeArrowId === '9arrow' ? activeArrowStyles : null}\r\n            onClick={() => {\r\n              props.setCurrentStudentsList(\r\n                props.sortDataUpward(props.currentStudentsList, 'location')\r\n              );\r\n              changeField('isSortedBy', 'location');\r\n              changeField('activeArrowId', '9arrow');\r\n            }}\r\n          >\r\n            ▲\r\n          </span>\r\n          <span\r\n            className={styles.arrow}\r\n            id=\"10arrow\"\r\n            style={activeArrowId === '10arrow' ? activeArrowStyles : null}\r\n            onClick={() => {\r\n              props.setCurrentStudentsList(\r\n                props.sortDataDownward(props.currentStudentsList, 'location')\r\n              );\r\n              changeField('isSortedBy', 'location');\r\n              changeField('activeArrowId', '10arrow');\r\n            }}\r\n          >\r\n            ▼\r\n          </span>\r\n          <Modal\r\n            isOpen={modalIsOpen && activeModalId === 'modal4' ? true : false}\r\n            onRequestClose={closeModal}\r\n            className={styles.modal}\r\n            id=\"modal4\"\r\n            overlayClassName={styles.overlay}\r\n            style={{\r\n              content: {\r\n                top: '23px',\r\n                right: '210px'\r\n              }\r\n            }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              value={props.request.location}\r\n              onChange={e => {\r\n                props.setRequest({\r\n                  name: props.request.name,\r\n                  github: props.request.github,\r\n                  email: props.request.email,\r\n                  location: e.target.value\r\n                });\r\n                localStorage.setItem('locationRequest', e.target.value);\r\n              }}\r\n            />\r\n            <br />\r\n            <button\r\n              className={styles.modalButton}\r\n              onClick={() => {\r\n                props.onSearchButtonClick('location');\r\n                closeModal();\r\n              }}\r\n            >\r\n              search\r\n            </button>\r\n            <button\r\n              className={styles.modalButton}\r\n              onClick={() => {\r\n                props.onResetButtonClick('location');\r\n                closeModal();\r\n              }}\r\n            >\r\n              reset\r\n            </button>\r\n          </Modal>\r\n          <br />\r\n          <button\r\n            className={styles.search}\r\n            onClick={() => {\r\n              setActiveModalId('modal4');\r\n              openModal();\r\n            }}\r\n          >\r\n            <i className=\"fas fa-search\"></i>\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n      {isRoleColumnVisible ? (\r\n        <div className={styles.header}>\r\n          Role\r\n          <select value={props.roleFilteredBy} onChange={props.handleSelectChange}>\r\n            <option value=\"all\">all</option>\r\n            <option value=\"mentor\">mentor</option>\r\n            <option value=\"activist\">activist</option>\r\n            <option value=\"student\">student</option>\r\n          </select>\r\n        </div>\r\n      ) : null}\r\n      {isActiveColumnVisible ? (\r\n        <div className={styles.header}>\r\n          Active\r\n          <input type=\"checkbox\" checked={props.isChecked} onChange={props.handleCheckboxChange} />\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styles from './Row.module.css';\r\n\r\nexport default function HeaderRow(props) {\r\n  const isSortedBy = useSelector(state => state.isSortedBy);\r\n  const isNameColumnVisible = useSelector(state => state.isNameColumnVisible);\r\n  const isGithubColumnVisible = useSelector(state => state.isGithubColumnVisible);\r\n  const isEmailColumnVisible = useSelector(state => state.isEmailColumnVisible);\r\n  const isLocationColumnVisible = useSelector(state => state.isLocationColumnVisible);\r\n  const isRoleColumnVisible = useSelector(state => state.isRoleColumnVisible);\r\n  const isActiveColumnVisible = useSelector(state => state.isActiveColumnVisible);\r\n\r\n  const activeItemStyles = {\r\n    background: '#BCF5EB'\r\n  };\r\n\r\n  const activeRowStyles = {\r\n    background: '#FFBF93'\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id={props.id}\r\n      style={\r\n        props.id === Number(props.activeRowId) || props.activeRowsArray.includes(`${props.id}`)\r\n          ? Object.assign(activeRowStyles, props.style)\r\n          : props.style\r\n      }\r\n      className={styles.wrapper}\r\n      onClick={props.onRowClick}\r\n    >\r\n      <div className={styles.item} style={isSortedBy === 'id' ? activeItemStyles : null}>\r\n        {props.id}\r\n      </div>\r\n      {isNameColumnVisible ? (\r\n        <div className={styles.item} style={isSortedBy === 'name' ? activeItemStyles : null}>\r\n          {props.name}\r\n        </div>\r\n      ) : null}\r\n      {isGithubColumnVisible ? (\r\n        <div className={styles.item} style={isSortedBy === 'github' ? activeItemStyles : null}>\r\n          {props.github}\r\n        </div>\r\n      ) : null}\r\n      {isEmailColumnVisible ? (\r\n        <div className={styles.item} style={isSortedBy === 'email' ? activeItemStyles : null}>\r\n          {props.email}\r\n        </div>\r\n      ) : null}\r\n      {isLocationColumnVisible ? (\r\n        <div className={styles.item} style={isSortedBy === 'location' ? activeItemStyles : null}>\r\n          {props.location}\r\n        </div>\r\n      ) : null}\r\n      {isRoleColumnVisible ? <div className={styles.item}>{props.role}</div> : null}\r\n      {isActiveColumnVisible ? (\r\n        <div className={styles.item}>{props.isActive ? 'yes' : 'no'}</div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styles from './Table.module.css';\r\nimport HeaderRow from '../../components/header_row/HeaderRow';\r\nimport Row from '../../components/row/Row';\r\nimport { FixedSizeList } from 'react-window';\r\nimport exportFromJSON from 'export-from-json';\r\n\r\nfunction Table() {\r\n  const students = useSelector(state => state.students);\r\n  const activeArrowId = useSelector(state => state.activeArrowId);\r\n  const isSortedBy = useSelector(state => state.isSortedBy);\r\n  const notVisibleColumns = useSelector(state => state.notVisibleColumns);\r\n  const dispatch = useDispatch();\r\n  const [currentStudentsList, setCurrentStudentsList] = useState(\r\n    parseInt(activeArrowId, 10) % 2\r\n      ? sortDataUpward(students, isSortedBy)\r\n      : sortDataDownward(students, isSortedBy)\r\n  );\r\n  const [isChecked, setIsChecked] = useState(\r\n    localStorage.getItem('isChecked') ? JSON.parse(localStorage.getItem('isChecked')) : false\r\n  );\r\n  const [isFilteredByRole, setIsFilteredByRole] = useState(\r\n    localStorage.getItem('isFilteredByRole')\r\n      ? JSON.parse(localStorage.getItem('isFilteredByRole'))\r\n      : false\r\n  );\r\n  const [roleFilteredBy, setRoleFilteredBy] = useState(\r\n    localStorage.getItem('roleFilteredBy') || ''\r\n  );\r\n  const [request, setRequest] = useState({\r\n    name: localStorage.getItem('nameRequest') || '',\r\n    github: localStorage.getItem('githubRequest') || '',\r\n    email: localStorage.getItem('emailRequest') || '',\r\n    location: localStorage.getItem('locationRequest') || ''\r\n  });\r\n  const [isFilteredByString, setIsFilteredByString] = useState(\r\n    localStorage.getItem('isFilteredByString')\r\n      ? JSON.parse(localStorage.getItem('isFilteredByString'))\r\n      : false\r\n  );\r\n  const [stringFieldFilteredBy, setStringFieldFilteredBy] = useState(\r\n    localStorage.getItem('stringFieldFilteredBy') || ''\r\n  );\r\n  const [activeRowId, setActiveRowId] = useState(-1);\r\n  const [severalActiveRowsMode, setSeveralActiveRowsMode] = useState(false);\r\n  const [activeRowsArray, setActiveRowsArray] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let array = [];\r\n    if (isFilteredByRole && isFilteredByString) {\r\n      array = filterByRole(\r\n        filterByRequest(request[stringFieldFilteredBy], stringFieldFilteredBy),\r\n        roleFilteredBy\r\n      );\r\n      if (isChecked) {\r\n        array = array.filter(item => item.isActive);\r\n      }\r\n    } else if (isFilteredByRole) {\r\n      array = filterByRole(students, roleFilteredBy);\r\n      if (isChecked) {\r\n        array = array.filter(item => item.isActive);\r\n      }\r\n    } else if (isFilteredByString) {\r\n      array = filterByRequest(request[stringFieldFilteredBy], stringFieldFilteredBy);\r\n      if (isChecked) {\r\n        array = array.filter(item => item.isActive);\r\n      }\r\n    } else {\r\n      array = students;\r\n      if (isChecked) {\r\n        array = array.filter(item => item.isActive);\r\n      }\r\n    }\r\n    setCurrentStudentsList(array);\r\n  }, []);\r\n\r\n  function changeField(field, value) {\r\n    return dispatch({\r\n      type: 'CHANGE_FIELD',\r\n      payload: {\r\n        [field]: value\r\n      }\r\n    });\r\n  }\r\n\r\n  function sortDataUpward(array, category) {\r\n    localStorage.setItem('isSortedBy', category);\r\n    array.sort((a, b) => (a[category] > b[category] ? 1 : a[category] < b[category] ? -1 : 0));\r\n    return array;\r\n  }\r\n\r\n  function sortDataDownward(array, category) {\r\n    localStorage.setItem('isSortedBy', category);\r\n    array.sort((a, b) => (a[category] > b[category] ? -1 : a[category] < b[category] ? 1 : 0));\r\n    return array;\r\n  }\r\n\r\n  function filterByRequest(str, field) {\r\n    setIsFilteredByString(true);\r\n    localStorage.setItem('isFilteredByString', true);\r\n\r\n    const array = students.filter(item => item[field].toLowerCase().includes(str));\r\n    return array;\r\n  }\r\n\r\n  function filterByRole(arr, str) {\r\n    let array = [];\r\n    setIsFilteredByRole(true);\r\n    localStorage.setItem('isFilteredByRole', true);\r\n    if (str === 'all') {\r\n      array = arr;\r\n    } else {\r\n      array = arr.filter(item => item.role === str);\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  function onSearchButtonClick(field) {\r\n    setStringFieldFilteredBy(field);\r\n    localStorage.setItem('stringFieldFilteredBy', field);\r\n    let array = filterByRequest(request[field], field);\r\n    if (isChecked && isFilteredByRole) {\r\n      array = filterByRole(array, roleFilteredBy).filter(item => item.isActive);\r\n    } else if (isChecked) {\r\n      array = array.filter(item => item.isActive);\r\n    } else if (isFilteredByRole) {\r\n      array = filterByRole(array, roleFilteredBy);\r\n    }\r\n    setCurrentStudentsList(array);\r\n  }\r\n\r\n  function onResetButtonClick(field) {\r\n    if (!request[field]) {\r\n      return;\r\n    }\r\n    setRequest(Object.assign({ [field]: '' }));\r\n    localStorage.setItem(`${field}Request`, '');\r\n    let array = filterByRequest('', field);\r\n    if (isChecked && isFilteredByRole) {\r\n      array = filterByRole(array, roleFilteredBy).filter(item => item.isActive);\r\n    } else if (isChecked) {\r\n      array = array.filter(item => item.isActive);\r\n    } else if (isFilteredByRole) {\r\n      array = filterByRole(array, roleFilteredBy);\r\n    }\r\n    setCurrentStudentsList(array);\r\n  }\r\n\r\n  function handleCheckboxChange(e) {\r\n    setIsChecked(e.target.checked);\r\n    localStorage.setItem('isChecked', e.target.checked);\r\n    let array = [];\r\n    if (isFilteredByRole && isFilteredByString) {\r\n      array = filterByRole(\r\n        filterByRequest(request[stringFieldFilteredBy], stringFieldFilteredBy),\r\n        roleFilteredBy\r\n      );\r\n      if (e.target.checked) {\r\n        array = array.filter(item => item.isActive);\r\n      }\r\n    } else if (isFilteredByRole) {\r\n      array = filterByRole(students, roleFilteredBy);\r\n      if (e.target.checked) {\r\n        array = array.filter(item => item.isActive);\r\n      }\r\n    } else if (isFilteredByString) {\r\n      array = filterByRequest(request[stringFieldFilteredBy], stringFieldFilteredBy);\r\n      if (e.target.checked) {\r\n        array = array.filter(item => item.isActive);\r\n      }\r\n    } else {\r\n      array = students;\r\n      if (e.target.checked) {\r\n        array = array.filter(item => item.isActive);\r\n      }\r\n    }\r\n    setCurrentStudentsList(array);\r\n  }\r\n\r\n  function handleSelectChange(e) {\r\n    setRoleFilteredBy(e.target.value);\r\n    localStorage.setItem('roleFilteredBy', e.target.value);\r\n    let array = [];\r\n    if (isFilteredByString && isChecked) {\r\n      array = filterByRequest(request[stringFieldFilteredBy], stringFieldFilteredBy);\r\n      array = filterByRole(array, e.target.value).filter(item => item.isActive);\r\n    } else if (isFilteredByString) {\r\n      array = filterByRequest(request[stringFieldFilteredBy], stringFieldFilteredBy);\r\n      array = filterByRole(array, e.target.value);\r\n    } else if (isChecked) {\r\n      array = filterByRole(students, e.target.value).filter(item => item.isActive);\r\n    } else {\r\n      array = filterByRole(students, e.target.value);\r\n    }\r\n    setCurrentStudentsList(array);\r\n  }\r\n\r\n  function onRowClick(e) {\r\n    setActiveRowId(e.target.parentNode.id);\r\n    if (severalActiveRowsMode) {\r\n      setActiveRowsArray([...new Set([...activeRowsArray, activeRowId, e.target.parentNode.id])]);\r\n    } else {\r\n      setActiveRowsArray([]);\r\n    }\r\n  }\r\n\r\n  function onKeyDownHandler(e) {\r\n    if (e.key === 'Delete') {\r\n      let array = [];\r\n      if (activeRowsArray.length) {\r\n        array = [...students.filter(v => !activeRowsArray.includes(`${v.id}`))];\r\n      } else {\r\n        array = [...students.filter(v => v.id !== Number(activeRowId))];\r\n      }\r\n      changeField('students', array);\r\n      localStorage.setItem('students', JSON.stringify(array));\r\n      setCurrentStudentsList(array);\r\n      setActiveRowId(-1);\r\n      setActiveRowsArray([]);\r\n    }\r\n    if (e.key === 'Control') {\r\n      setSeveralActiveRowsMode(true);\r\n    }\r\n  }\r\n\r\n  function onKeyUpHandler() {\r\n    setSeveralActiveRowsMode(false);\r\n  }\r\n\r\n  const ListRow = ({ index, style }) => (\r\n    <Row\r\n      style={style}\r\n      onRowClick={onRowClick}\r\n      activeRowId={activeRowId}\r\n      key={currentStudentsList[index].id}\r\n      id={currentStudentsList[index].id}\r\n      name={currentStudentsList[index].name}\r\n      github={currentStudentsList[index].github}\r\n      email={currentStudentsList[index].email}\r\n      location={currentStudentsList[index].location}\r\n      role={currentStudentsList[index].role}\r\n      isActive={currentStudentsList[index].isActive}\r\n      activeRowsArray={activeRowsArray}\r\n    />\r\n  );\r\n\r\n  function onlyVisible(arr, keys) {\r\n    const array = JSON.stringify(arr);\r\n    const newArr = JSON.parse(array);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      newArr.forEach(item => delete item[keys[i]]);\r\n    }\r\n    return newArr;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={styles.wrapper}\r\n      onKeyDown={onKeyDownHandler}\r\n      onKeyUp={onKeyUpHandler}\r\n      tabIndex=\"0\"\r\n    >\r\n      <HeaderRow\r\n        sortDataUpward={sortDataUpward}\r\n        sortDataDownward={sortDataDownward}\r\n        filterByRequest={filterByRequest}\r\n        handleCheckboxChange={handleCheckboxChange}\r\n        isChecked={isChecked}\r\n        setIsChecked={setIsChecked}\r\n        request={request}\r\n        setRequest={setRequest}\r\n        roleFilteredBy={roleFilteredBy}\r\n        handleSelectChange={handleSelectChange}\r\n        onSearchButtonClick={onSearchButtonClick}\r\n        onResetButtonClick={onResetButtonClick}\r\n        currentStudentsList={currentStudentsList}\r\n        setCurrentStudentsList={setCurrentStudentsList}\r\n      />\r\n      <FixedSizeList height={500} width={1280} itemSize={25} itemCount={currentStudentsList.length}>\r\n        {ListRow}\r\n      </FixedSizeList>\r\n      <div className={styles.buttonsContainer}>\r\n        <button\r\n          onClick={() => {\r\n            const data = onlyVisible(currentStudentsList, notVisibleColumns);\r\n            const fileName = 'download';\r\n            const exportType = 'csv';\r\n            exportFromJSON({ data, fileName, exportType });\r\n          }}\r\n        >\r\n          Download as CSV\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            const data = onlyVisible(currentStudentsList, notVisibleColumns);\r\n            const fileName = 'download';\r\n            const exportType = 'xls';\r\n            exportFromJSON({ data, fileName, exportType });\r\n          }}\r\n        >\r\n          Download as XLS\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport styles from './ColumnSwitch.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nexport default function ColumnSwitch() {\r\n  const isNameColumnVisible = useSelector(state => state.isNameColumnVisible);\r\n  const isGithubColumnVisible = useSelector(state => state.isGithubColumnVisible);\r\n  const isEmailColumnVisible = useSelector(state => state.isEmailColumnVisible);\r\n  const isLocationColumnVisible = useSelector(state => state.isLocationColumnVisible);\r\n  const isRoleColumnVisible = useSelector(state => state.isRoleColumnVisible);\r\n  const isActiveColumnVisible = useSelector(state => state.isActiveColumnVisible);\r\n  const dispatch = useDispatch();\r\n\r\n  function changeField(field, value) {\r\n    return dispatch({\r\n      type: 'CHANGE_FIELD',\r\n      payload: {\r\n        [field]: value\r\n      }\r\n    });\r\n  }\r\n\r\n  function addItem(value) {\r\n    return dispatch({\r\n      type: 'ADD_ITEM',\r\n      payload: value\r\n    });\r\n  }\r\n\r\n  function deleteItem(value) {\r\n    return dispatch({\r\n      type: 'DELETE_ITEM',\r\n      payload: value\r\n    });\r\n  }\r\n\r\n  function handleCheckboxChange(e, field, column) {\r\n    changeField(field, e.target.checked);\r\n    localStorage.setItem(field, e.target.checked);\r\n    if (e.target.checked) {\r\n      deleteItem(column);\r\n    } else {\r\n      addItem(column);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      Visible columns:\r\n      <label htmlFor=\"nameColumn\">\r\n        <input\r\n          id=\"nameColumn\"\r\n          type=\"checkbox\"\r\n          checked={isNameColumnVisible}\r\n          onChange={e => handleCheckboxChange(e, 'isNameColumnVisible', 'name')}\r\n        />\r\n        name\r\n      </label>\r\n      <label htmlFor=\"githubColumn\">\r\n        <input\r\n          id=\"githubColumn\"\r\n          type=\"checkbox\"\r\n          checked={isGithubColumnVisible}\r\n          onChange={e => handleCheckboxChange(e, 'isGithubColumnVisible', 'github')}\r\n        />\r\n        github\r\n      </label>\r\n      <label htmlFor=\"emailColumn\">\r\n        <input\r\n          id=\"emailColumn\"\r\n          type=\"checkbox\"\r\n          checked={isEmailColumnVisible}\r\n          onChange={e => handleCheckboxChange(e, 'isEmailColumnVisible', 'email')}\r\n        />\r\n        email\r\n      </label>\r\n      <label htmlFor=\"locationColumn\">\r\n        <input\r\n          id=\"locationColumn\"\r\n          type=\"checkbox\"\r\n          checked={isLocationColumnVisible}\r\n          onChange={e => handleCheckboxChange(e, 'isLocationColumnVisible', 'location')}\r\n        />\r\n        location\r\n      </label>\r\n      <label htmlFor=\"roleColumn\">\r\n        <input\r\n          id=\"roleColumn\"\r\n          type=\"checkbox\"\r\n          checked={isRoleColumnVisible}\r\n          onChange={e => handleCheckboxChange(e, 'isRoleColumnVisible', 'role')}\r\n        />\r\n        role\r\n      </label>\r\n      <label htmlFor=\"activeColumn\">\r\n        <input\r\n          id=\"activeColumn\"\r\n          type=\"checkbox\"\r\n          checked={isActiveColumnVisible}\r\n          onChange={e => handleCheckboxChange(e, 'isActiveColumnVisible', 'isActive')}\r\n        />\r\n        active members\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport styles from './App.module.css';\nimport Table from '../table/Table';\nimport ColumnSwitch from '../../components/column_switch/ColumnSwitch';\n\nfunction App() {\n  return (\n    <div className={styles.wrapper}>\n      <p className={styles.devToolsText}>To show redux developer tools press Ctrl+h</p>\n      <ColumnSwitch />\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport { createDevTools } from 'redux-devtools';\r\nimport LogMonitor from 'redux-devtools-log-monitor';\r\nimport DockMonitor from 'redux-devtools-dock-monitor';\r\n\r\nconst DevTools = createDevTools(\r\n  <DockMonitor\r\n    toggleVisibilityKey=\"ctrl-h\"\r\n    changePositionKey=\"ctrl-q\"\r\n    defaultPosition=\"right\"\r\n    defaultIsVisible={false}\r\n  >\r\n    <LogMonitor theme=\"tomorrow\" />\r\n  </DockMonitor>\r\n);\r\n\r\nexport default DevTools;\r\n","import faker from 'faker';\r\n\r\nfaker.seed(781);\r\n\r\nexport const makeFake = idx => {\r\n  return {\r\n    id: idx,\r\n    name: faker.name.findName(),\r\n    github: faker.internet.userName(),\r\n    email: faker.internet.email(),\r\n    location: faker.address.city(),\r\n    role: faker.helpers.shuffle(['mentor', 'student', 'activist'])[0],\r\n    isActive: faker.random.boolean()\r\n  };\r\n};\r\n\r\nconst data = [...new Array(1000)].map((_, idx) => makeFake(idx));\r\n\r\nexport default {\r\n  data: data\r\n};\r\n","import { createStore, compose } from 'redux';\r\nimport DevTools from './DevTools';\r\nimport students from '../api/students';\r\n\r\nconst initialState = {\r\n  students: localStorage.getItem('students')\r\n    ? JSON.parse(localStorage.getItem('students'))\r\n    : students.data,\r\n  isSortedBy: localStorage.getItem('isSortedBy') || 'id',\r\n  activeArrowId: localStorage.getItem('activeArrowId') || '1arrow',\r\n  isNameColumnVisible: localStorage.getItem('isNameColumnVisible')\r\n    ? JSON.parse(localStorage.getItem('isNameColumnVisible'))\r\n    : true,\r\n  isGithubColumnVisible: localStorage.getItem('isGithubColumnVisible')\r\n    ? JSON.parse(localStorage.getItem('isGithubColumnVisible'))\r\n    : true,\r\n  isEmailColumnVisible: localStorage.getItem('isEmailColumnVisible')\r\n    ? JSON.parse(localStorage.getItem('isEmailColumnVisible'))\r\n    : true,\r\n  isLocationColumnVisible: localStorage.getItem('isLocationColumnVisible')\r\n    ? JSON.parse(localStorage.getItem('isLocationColumnVisible'))\r\n    : true,\r\n  isRoleColumnVisible: localStorage.getItem('isRoleColumnVisible')\r\n    ? JSON.parse(localStorage.getItem('isRoleColumnVisible'))\r\n    : true,\r\n  isActiveColumnVisible: localStorage.getItem('isActiveColumnVisible')\r\n    ? JSON.parse(localStorage.getItem('isActiveColumnVisible'))\r\n    : true,\r\n  notVisibleColumns: localStorage.getItem('notVisibleColumns')\r\n    ? JSON.parse(localStorage.getItem('notVisibleColumns'))\r\n    : []\r\n};\r\n\r\nconst enhancer = compose(DevTools.instrument());\r\n\r\nfunction reducer(state = initialState, action) {\r\n  if (action.type === 'CHANGE_FIELD') {\r\n    return Object.assign(state, action.payload);\r\n  }\r\n  if (action.type === 'ADD_ITEM') {\r\n    const arr = state.notVisibleColumns;\r\n    arr.push(action.payload);\r\n    localStorage.setItem('notVisibleColumns', JSON.stringify(arr));\r\n    return Object.assign(state, { notVisibleColumns: arr });\r\n  }\r\n  if (action.type === 'DELETE_ITEM') {\r\n    const arr = state.notVisibleColumns.filter(v => v !== action.payload);\r\n    localStorage.setItem('notVisibleColumns', JSON.stringify(arr));\r\n    return Object.assign(state, {\r\n      notVisibleColumns: arr\r\n    });\r\n  }\r\n  return state;\r\n}\r\n\r\nexport const store = createStore(reducer, enhancer);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/app/App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport DevTools from './redux/DevTools';\n\nReactDOM.render(\n  <Provider store={store}>\n    <DevTools />\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ColumnSwitch_wrapper__3a4kZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__3_bjh\",\"devToolsText\":\"App_devToolsText__2Ecdg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Table_wrapper__11yLA\",\"buttonsContainer\":\"Table_buttonsContainer__1_Qd-\"};"],"sourceRoot":""}